
create table if not exists admin_authority
(
    id              bigint generated by default as identity
    primary key,
    created_at      timestamp(6) not null,
    created_by      varchar(255),
    status          varchar(255)
    constraint admin_authority_status_check
    check ((status)::text = ANY
((ARRAY ['Disabled'::character varying, 'Enabled'::character varying, 'Pending'::character varying, 'Deleted'::character varying])::text[])),
    updated_at      timestamp(6),
    updated_by      varchar(255),
    authority_key   varchar(255)
    constraint ukn8pl19suymcpls75qknf5rxn1
    unique,
    authority_name  varchar(255),
    authority_order integer      not null,
    end_point_url   varchar(255),
    fa_icon         varchar(255),
    last_used       timestamp(6),
    menu            boolean      not null,
    parent_id       bigint
    constraint fknyidksblt7ayw57ehdc9qh25i
    references admin_authority
    );


create table if not exists admin_configuration
(
    id                  bigint generated by default as identity
    primary key,
    created_at          timestamp(6) not null,
    created_by          varchar(255),
    status              varchar(255)
    constraint admin_configuration_status_check
    check ((status)::text = ANY
((ARRAY ['Disabled'::character varying, 'Enabled'::character varying, 'Pending'::character varying, 'Deleted'::character varying])::text[])),
    updated_at          timestamp(6),
    updated_by          varchar(255),
    configuration_code  varchar(255)
    constraint ukdkyw57wyr789iyid7mab42i1p
    unique,
    configuration_value text         not null,
    last_used_at        timestamp(6),
    remark              varchar(255)
    );


create table if not exists admin_language
(
    id         bigint generated by default as identity
    primary key,
    created_at timestamp(6) not null,
    created_by varchar(255),
    status     varchar(255)
    constraint admin_language_status_check
    check ((status)::text = ANY
((ARRAY ['Disabled'::character varying, 'Enabled'::character varying, 'Pending'::character varying, 'Deleted'::character varying])::text[])),
    updated_at timestamp(6),
    updated_by varchar(255),
    code       varchar(2),
    flag       text,
    name       varchar(20)
    );

create table if not exists admin_login
(
    id              bigint generated by default as identity
    primary key,
    created_at      timestamp(6) not null,
    created_by      varchar(255),
    status          varchar(255)
    constraint admin_login_status_check
    check ((status)::text = ANY
((ARRAY ['Disabled'::character varying, 'Enabled'::character varying, 'Pending'::character varying, 'Deleted'::character varying])::text[])),
    updated_at      timestamp(6),
    updated_by      varchar(255),
    browser_agent   varchar(255),
    clientipaddress varchar(255),
    event_name      varchar(255),
    message         text,
    session_id      varchar(255),
    username        varchar(255)
    );


create table if not exists admin_message
(
    id              bigint generated by default as identity
    primary key,
    created_at      timestamp(6) not null,
    created_by      varchar(255),
    status          varchar(255)
    constraint admin_message_status_check
    check ((status)::text = ANY
((ARRAY ['Disabled'::character varying, 'Enabled'::character varying, 'Pending'::character varying, 'Deleted'::character varying])::text[])),
    updated_at      timestamp(6),
    updated_by      varchar(255),
    message_content varchar(255),
    message_key     varchar(255),
    locale          varchar(255),
    remark          varchar(255)
    );


create table if not exists admin_role
(
    id         bigint generated by default as identity
    primary key,
    created_at timestamp(6) not null,
    created_by varchar(255),
    status     varchar(255)
    constraint admin_role_status_check
    check ((status)::text = ANY
((ARRAY ['Disabled'::character varying, 'Enabled'::character varying, 'Pending'::character varying, 'Deleted'::character varying])::text[])),
    updated_at timestamp(6),
    updated_by varchar(255),
    role_name  varchar(255)
    );


create table if not exists admin_role_authority
(
    role_id      bigint not null
    constraint fkfygo3u7krcn9dx03665xvay7b
    references admin_role,
    authority_id bigint not null
    constraint fkd28a6hdfwr870bdxay9apasni
    references admin_authority
);


create table if not exists admin_user
(
    id                      bigint generated by default as identity
    primary key,
    created_at              timestamp(6) not null,
    created_by              varchar(255),
    status                  varchar(255)
    constraint admin_user_status_check
    check ((status)::text = ANY
((ARRAY ['Disabled'::character varying, 'Enabled'::character varying, 'Pending'::character varying, 'Deleted'::character varying])::text[])),
    updated_at              timestamp(6),
    updated_by              varchar(255),
    display_name            varchar(255),
    force_change_password   boolean      not null,
    last_change_password_at timestamp(6),
    last_login_at           timestamp(6),
    last_loginipaddress     varchar(255),
    password                varchar(255),
    phone_number            varchar(255),
    username                varchar(255)
    constraint uklvod9bfm438ex1071ku1glb70
    unique,
    admin_role_id           bigint
    constraint fkb7tsen1me6klqlyj0u1mr8qrf
    references admin_role
    );


create table if not exists attachment
(
    id                 bigint generated by default as identity
    primary key,
    created_at         timestamp(6) not null,
    created_by         varchar(255),
    status             varchar(255)
    constraint attachment_status_check
    check ((status)::text = ANY
((ARRAY ['Disabled'::character varying, 'Enabled'::character varying, 'Pending'::character varying, 'Deleted'::character varying])::text[])),
    updated_at         timestamp(6),
    updated_by         varchar(255),
    content            oid,
    extension          varchar(255),
    original_file_name varchar(255),
    reference_id       bigint,
    reference_resource varchar(255),
    remark             varchar(255)
    );


create table if not exists audit_log
(
    audit_log_id bigint generated by default as identity
    primary key,
    log_event    varchar(255),
    log_key      varchar(255),
    new_object   text,
    old_object   text,
    remark       varchar(255),
    remote_id    varchar(255),
    time_stamp   timestamp(6),
    username     varchar(255)
    );

create table if not exists manage_beneficiary
(
    id                          bigint generated by default as identity
    primary key,
    created_at                  timestamp(6) not null,
    created_by                  varchar(255),
    status                      varchar(255)
    constraint manage_beneficiary_status_check
    check ((status)::text = ANY
((ARRAY ['Disabled'::character varying, 'Enabled'::character varying, 'Pending'::character varying, 'Deleted'::character varying])::text[])),
    updated_at                  timestamp(6),
    updated_by                  varchar(255),
    address                     varchar(255),
    beneficiary_type            varchar(255)
    constraint manage_beneficiary_beneficiary_type_check
    check ((beneficiary_type)::text = ANY
((ARRAY ['Individual'::character varying, 'LegalEntity'::character varying])::text[])),
    company_address             varchar(255),
    company_issued_by           varchar(255),
    company_issued_date         timestamp(6),
    company_name                varchar(255),
    company_nature_of_business  varchar(255),
    company_registration_number varchar(255),
    date_of_birth               timestamp(6),
    designation                 varchar(255),
    document_number             varchar(255),
    document_type               varchar(255),
    email                       varchar(255),
    expiry_date                 timestamp(6),
    full_name                   varchar(255),
    gender                      varchar(255)
    constraint manage_beneficiary_gender_check
    check ((gender)::text = ANY ((ARRAY ['Male'::character varying, 'Female'::character varying])::text[])),
    issued_date                 timestamp(6),
    marital_status              varchar(255),
    nationality                 varchar(255),
    occupation                  varchar(255),
    phone_number                varchar(255),
    remark                      varchar(255),
    representative_name         varchar(255),
    workplace_name              varchar(255)
    );

create table if not exists manage_beneficiary_account
(
    id             bigint generated by default as identity
    primary key,
    created_at     timestamp(6) not null,
    created_by     varchar(255),
    status         varchar(255)
    constraint manage_beneficiary_account_status_check
    check ((status)::text = ANY
((ARRAY ['Disabled'::character varying, 'Enabled'::character varying, 'Pending'::character varying, 'Deleted'::character varying])::text[])),
    updated_at     timestamp(6),
    updated_by     varchar(255),
    account_name   varchar(255),
    account_number varchar(255),
    address        varchar(255),
    bank_name      varchar(255),
    swift_code     varchar(255),
    beneficiary_id bigint
    constraint fk4gwo4r8kpohrypbr12mfr41br
    references manage_beneficiary
    );



create table if not exists manage_field_value
(
    id            bigint generated by default as identity
    primary key,
    created_at    timestamp(6) not null,
    created_by    varchar(255),
    status        varchar(255)
    constraint manage_field_value_status_check
    check ((status)::text = ANY
((ARRAY ['Disabled'::character varying, 'Enabled'::character varying, 'Pending'::character varying, 'Deleted'::character varying])::text[])),
    updated_at    timestamp(6),
    updated_by    varchar(255),
    data_type     varchar(255)
    constraint manage_field_value_data_type_check
    check ((data_type)::text = ANY
((ARRAY ['String'::character varying, 'Integer'::character varying, 'Long'::character varying, 'Double'::character varying, 'BigDecimal'::character varying, 'Boolean'::character varying, 'List'::character varying])::text[])),
    default_value oid,
    field_code    varchar(255),
    field_name    varchar(255)
    );


create table if not exists manage_field_value_list
(
    id         bigint generated by default as identity
    primary key,
    created_at timestamp(6)      not null,
    created_by varchar(255),
    status     varchar(255)
    constraint manage_field_value_list_status_check
    check ((status)::text = ANY
((ARRAY ['Disabled'::character varying, 'Enabled'::character varying, 'Pending'::character varying, 'Deleted'::character varying])::text[])),
    updated_at timestamp(6),
    updated_by varchar(255),
    english    varchar(255),
    field_code varchar(255),
    is_default boolean           not null,
    sort       integer default 0 not null,
    value      varchar(255)
    );

create table if not exists manage_request_object
(
    id                  bigint generated by default as identity
    primary key,
    created_at          timestamp(6) not null,
    created_by          varchar(255),
    status              varchar(255)
    constraint manage_request_object_status_check
    check ((status)::text = ANY
((ARRAY ['Disabled'::character varying, 'Enabled'::character varying, 'Pending'::character varying, 'Deleted'::character varying])::text[])),
    updated_at          timestamp(6),
    updated_by          varchar(255),
    description         varchar(255),
    request_object_name varchar(255)
    );

create table if not exists manage_service_type
(
    id                bigint generated by default as identity
    primary key,
    created_at        timestamp(6) not null,
    created_by        varchar(255),
    status            varchar(255)
    constraint manage_service_type_status_check
    check ((status)::text = ANY
((ARRAY ['Disabled'::character varying, 'Enabled'::character varying, 'Pending'::character varying, 'Deleted'::character varying])::text[])),
    updated_at        timestamp(6),
    updated_by        varchar(255),
    description       varchar(255),
    service_type_name varchar(255)
    );


create table if not exists manage_portfolio
(
    id                   bigint generated by default as identity
    primary key,
    created_at           timestamp(6)     not null,
    created_by           varchar(255),
    status               varchar(255)
    constraint manage_portfolio_status_check
    check ((status)::text = ANY
((ARRAY ['Disabled'::character varying, 'Enabled'::character varying, 'Pending'::character varying, 'Deleted'::character varying])::text[])),
    updated_at           timestamp(6),
    updated_by           varchar(255),
    asset_value          double precision not null,
    holding_fee          double precision not null,
    portfolio_name       varchar(255),
    quantity             integer          not null,
    remark               varchar(255),
    service_type_name_id bigint
    constraint fkn1d0bqgfibgs3n25gd98ciryr
    references manage_service_type
    );

create table if not exists manage_trustor
(
    id                          bigint generated by default as identity
    primary key,
    created_at                  timestamp(6) not null,
    created_by                  varchar(255),
    status                      varchar(255)
    constraint manage_trustor_status_check
    check ((status)::text = ANY
((ARRAY ['Disabled'::character varying, 'Enabled'::character varying, 'Pending'::character varying, 'Deleted'::character varying])::text[])),
    updated_at                  timestamp(6),
    updated_by                  varchar(255),
    address                     varchar(255),
    company_address             varchar(255),
    company_issued_by           varchar(255),
    company_issued_date         timestamp(6),
    company_name                varchar(255),
    company_nature_of_business  varchar(255),
    company_registration_number varchar(255),
    date_of_birth               timestamp(6),
    designation                 varchar(255),
    document_number             varchar(255),
    document_type               varchar(255),
    email                       varchar(255),
    expiry_date                 timestamp(6),
    full_name                   varchar(255),
    gender                      varchar(255)
    constraint manage_trustor_gender_check
    check ((gender)::text = ANY ((ARRAY ['Male'::character varying, 'Female'::character varying])::text[])),
    issued_date                 timestamp(6),
    marital_status              varchar(255),
    nationality                 varchar(255),
    occupation                  varchar(255),
    phone_number                varchar(255),
    remark                      varchar(255),
    representative_name         varchar(255),
    trustor_type                varchar(255)
    constraint manage_trustor_trustor_type_check
    check ((trustor_type)::text = ANY
((ARRAY ['Individual'::character varying, 'LegalEntity'::character varying])::text[])),
    workplace_name              varchar(255)
    );

create table if not exists manage_engagement
(
    id                bigint generated by default as identity
    primary key,
    created_at        timestamp(6) not null,
    created_by        varchar(255),
    status            varchar(255)
    constraint manage_engagement_status_check
    check ((status)::text = ANY
((ARRAY ['Disabled'::character varying, 'Enabled'::character varying, 'Pending'::character varying, 'Deleted'::character varying])::text[])),
    updated_at        timestamp(6),
    updated_by        varchar(255),
    checked_by        varchar(255),
    checked_date      timestamp(6),
    engagement_date   timestamp(6),
    engagement_number varchar(255),
    engagement_status varchar(255)
    constraint manage_engagement_engagement_status_check
    check ((engagement_status)::text = ANY
((ARRAY ['Pending'::character varying, 'Approved'::character varying, 'Rejected'::character varying])::text[])),
    rejected_reason   varchar(255),
    terminated_date   timestamp(6),
    portfolio_id      bigint
    constraint fk74yj08ua7rmp4ot5c4mo8e7gq
    references manage_portfolio,
    trustor_id        bigint
    constraint fk1b5yau36pd0qjtn3lpy0lnel8
    references manage_trustor
    );


create table if not exists manage_engagement_beneficiary
(
    engagement_id  bigint not null
    constraint fkihdv0006540y5iuycl4xdotum
    references manage_engagement,
    beneficiary_id bigint not null
    constraint fkbap4pyuw61a9l72uy9oxwd99h
    references manage_beneficiary
);


create table if not exists temp_email_reset
(
    email_id        bigint generated by default as identity
    primary key,
    created_at      timestamp(6),
    email           varchar(255),
    reset_url_token varchar(255),
    status          smallint
    constraint temp_email_reset_status_check
    check ((status >= 0) AND (status <= 3)),
    token           varchar(255)
);



